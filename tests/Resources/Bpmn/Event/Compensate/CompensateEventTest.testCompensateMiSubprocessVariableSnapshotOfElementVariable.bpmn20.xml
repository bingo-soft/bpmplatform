<?xml version="1.0" encoding="UTF-8"?>
<definitions id="definitions" 
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:extension="http://activiti.org/bpmn"
  targetNamespace="Examples">
	
	<process id="compensateProcess" isExecutable="true">

		<startEvent id="start" />
		
		<sequenceFlow sourceRef="start"	targetRef="scope" />

		<subProcess id="scope">
		
			<multiInstanceLoopCharacteristics extension:collection="flights" extension:elementVariable="flight" isSequential="false" />

			<startEvent id="startInScope" />
			
			<sequenceFlow sourceRef="startInScope" targetRef="bookFlight" />

			<serviceTask id="bookFlight" 
				extension:class="Tests.Bpmn.Event.Compensate.Helper.BookFlightService" />

			<boundaryEvent id="compensateBookFlightEvt" name="Boundary event"
				attachedToRef="bookFlight">
				<compensateEventDefinition />
			</boundaryEvent>
			
			<serviceTask id="undoBookFlight" isForCompensation="true" 
					extension:class="Tests.Bpmn.Event.Compensate.Helper.CancelFlightService" />
			
			<sequenceFlow sourceRef="bookFlight" targetRef="endInScope" />
			
			<endEvent id="endInScope" />
			
			<association associationDirection="One" sourceRef="compensateBookFlightEvt" targetRef="undoBookFlight" />
						
		</subProcess>

		<sequenceFlow sourceRef="scope" targetRef="throwCompensate" />
		
		<intermediateThrowEvent id="throwCompensate">
			<compensateEventDefinition />
		</intermediateThrowEvent>
		
		<sequenceFlow sourceRef="throwCompensate" targetRef="end" />
		
		<endEvent id="end" />
	</process>

</definitions>
