<?xml version="1.0" encoding="UTF-8"?>
<definitions id="definitions" 
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:extension="http://activiti.org/bpmn"
  targetNamespace="Examples">

 <process id="testProcess" isExecutable="true">

  <startEvent id="start" />

  <sequenceFlow sourceRef="start" targetRef="bookHotel" />

  <serviceTask id="bookHotel" extension:expression="${true}">
    <multiInstanceLoopCharacteristics isSequential="true">
      <loopCardinality>5</loopCardinality>
    </multiInstanceLoopCharacteristics>
  </serviceTask>

   <boundaryEvent id="compensateBookHotelEvt" name="Boundary event" attachedToRef="bookHotel">
    <compensateEventDefinition />
   </boundaryEvent>  

   <serviceTask id="undoBookHotel" isForCompensation="true"
    extension:class="Tests.Bpmn.Event.Compensate.Helper.UndoService">
    <extensionElements>
     <extension:field name="counterName" stringValue="undoBookHotel" />

      <extension:executionListener event="start">
        <extension:script scriptFormat="groovy">
          execution.setVariable('start', start + 1);
        </extension:script>
      </extension:executionListener>

     <extension:executionListener event="end">
        <extension:script scriptFormat="groovy">
          execution.setVariable('end', end + 1);
        </extension:script>
      </extension:executionListener>

    </extensionElements>

   </serviceTask> 

  <sequenceFlow sourceRef="bookHotel" targetRef="throwCompensate" />

  <intermediateThrowEvent id="throwCompensate">
      <compensateEventDefinition activityRef="bookHotel" />
  </intermediateThrowEvent>

  <sequenceFlow sourceRef="throwCompensate" targetRef="wait" />

  <receiveTask id="wait"></receiveTask>

  <sequenceFlow sourceRef="wait" targetRef="end" />

  <endEvent id="end" />

  <association associationDirection="One" sourceRef="compensateBookHotelEvt" targetRef="undoBookHotel" />
 </process>

</definitions>
