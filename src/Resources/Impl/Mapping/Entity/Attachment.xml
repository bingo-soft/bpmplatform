<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Jabe\Impl\Persistence\Entity\AttachmentEntity">

  <!-- ATTACHMENT INSERT -->

  <insert id="insertAttachment" parameterType="Jabe\Impl\Persistence\Entity\AttachmentEntity">
    insert into ${prefix}ACT_HI_ATTACHMENT (ID_, NAME_, DESCRIPTION_, TYPE_, TASK_ID_, ROOT_PROC_INST_ID_, PROC_INST_ID_, URL_, CONTENT_ID_, TENANT_ID_, CREATE_TIME_, REMOVAL_TIME_, REV_)
    values (
      #{id:VARCHAR},
      #{name:VARCHAR},
      #{description:VARCHAR},
      #{type:VARCHAR},
      #{taskId:VARCHAR},
      #{rootProcessInstanceId:VARCHAR},
      #{processInstanceId:VARCHAR},
      #{url:VARCHAR},
      #{contentId:VARCHAR},
      #{tenantId:VARCHAR},
      #{createTime:VARCHAR},
      #{removalTime:VARCHAR},
      1
    )
  </insert>

  <!-- ATTACHMENT UPDATE -->

  <update id="updateAttachment" parameterType="Jabe\Impl\Persistence\Entity\AttachmentEntity">
    update ${prefix}ACT_HI_ATTACHMENT 
    set
      REV_ = #{revisionNext},
      NAME_ = #{name:VARCHAR},
      DESCRIPTION_ = #{description:VARCHAR}
    where ID_ = #{id}
      and REV_ = #{revision}
  </update>

  <update id="updateAttachmentsByRootProcessInstanceId"
          parameterType="array">
      update ${prefix}ACT_HI_ATTACHMENT set
      REMOVAL_TIME_ = #{removalTime:VARCHAR}

      where ROOT_PROC_INST_ID_ = #{rootProcessInstanceId:VARCHAR}
  </update>

  <update id="updateAttachmentsByRootProcessInstanceId_mssql"
          parameterType="array">
    update RES set
    RES.REMOVAL_TIME_ = #{removalTime:VARCHAR}
    FROM ${prefix}ACT_HI_ATTACHMENT RES WITH (FORCESEEK)
    where ROOT_PROC_INST_ID_ = #{rootProcessInstanceId:VARCHAR}
  </update>

  <update id="updateAttachmentsByProcessInstanceId"
          parameterType="array">
    update ${prefix}ACT_HI_ATTACHMENT
      set REMOVAL_TIME_ = #{removalTime:VARCHAR}
      where PROC_INST_ID_ = #{processInstanceId:VARCHAR}
        or TASK_ID_ in (
          SELECT ID_
          FROM ${prefix}ACT_HI_TASKINST
          WHERE PROC_INST_ID_ = #{processInstanceId:VARCHAR}
        )
  </update>

  <update id="updateAttachmentsByProcessInstanceId_mssql"
          parameterType="array">
    update RES set
      RES.REMOVAL_TIME_ = #{removalTime:VARCHAR}
      FROM ${prefix}ACT_HI_ATTACHMENT RES WITH (FORCESEEK)
      where RES.PROC_INST_ID_ = #{processInstanceId:VARCHAR}
        or RES.TASK_ID_ in (
          SELECT ID_
          FROM ${prefix}ACT_HI_TASKINST
          WHERE PROC_INST_ID_ = #{processInstanceId:VARCHAR}
        )
  </update>

  <!-- ATTACHMENT DELETE -->

  <delete id="deleteAttachment" parameterType="Jabe\Impl\Persistence\Entity\AttachmentEntity">
    delete from ${prefix}ACT_HI_ATTACHMENT 
    where ID_ = #{id} and REV_ = #{revision} 
  </delete>

  <delete id="deleteAttachmentByIds" parameterType="array">
    delete from ${prefix}ACT_HI_ATTACHMENT
    <where>
      <include refid="selectAttachmentsProcessInstanceByIdsSql"/>
      <include refid="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql"/>
    </where>
  </delete>

  <delete id="deleteAttachmentByIds_mysql" parameterType="array">
    delete A from ${prefix}ACT_HI_ATTACHMENT A
    <include refid="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql_mysql"/>
    <where>
      <include refid="selectAttachmentsProcessInstanceByIdsSql"/>
    </where>
  </delete>

  <delete id="deleteAttachmentByteArraysByIds" parameterType="array">
    delete from ${prefix}ACT_GE_BYTEARRAY
    where ID_ in
      (select distinct CONTENT_ID_
      from ${prefix}ACT_HI_ATTACHMENT
      <where>
        <include refid="selectAttachmentsProcessInstanceByIdsSql"/>
        <include refid="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql"/>
        and CONTENT_ID_ is not NULL
      </where>)
  </delete>

  <delete id="deleteAttachmentByteArraysByIds_mysql" parameterType="array">
    delete B from ${prefix}ACT_GE_BYTEARRAY B
    inner join ${prefix}ACT_HI_ATTACHMENT A
      on B.ID_ = A.CONTENT_ID_
      <include refid="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql_mysql"/>
      <where>
        <include refid="selectAttachmentsProcessInstanceByIdsSql"/>
        and A.CONTENT_ID_ is not NULL
      </where>
  </delete>

  <sql id="andWhereMinuteInDateBetweenSql">
    <if test="parameter.minuteFrom != null and parameter.minuteTo != null">
      AND ${datepart1}<include refid="src/Resources/Impl/Mapping/Entity/Commons.periodUnitFunction"/>${datepart2}${date}${datepart3}
      between #{parameter.minuteFrom} and #{parameter.minuteTo}
    </if>
  </sql>

  <sql id="andWhereMinuteInDateBetweenSql_oracle">
    <if test="parameter.minuteFrom != null and parameter.minuteTo != null">
      AND ${datepart1}${date}${datepart2}<include refid="src/Resources/Impl/Mapping/Entity/Commons.periodUnitFunction"/>${datepart3}
      between #{parameter.minuteFrom} and #{parameter.minuteTo}
    </if>
  </sql>

  <delete id="deleteAttachmentsByRemovalTime"
    parameterType="Jabe\Impl\Db\ListQueryParameterObject">
    <bind name="date" value="'REMOVAL_TIME_'"/>
    <bind name="reportPeriodUnitName" value="'MINUTE'"/>
    delete ${limitBeforeWithoutOffset} from ${prefix}ACT_HI_ATTACHMENT
    where REMOVAL_TIME_ &lt;= #{parameter.removalTime}
    <include refid="andWhereMinuteInDateBetweenSql"/>
    ${limitAfterWithoutOffset}
  </delete>

  <delete id="deleteAttachmentsByRemovalTime_oracle"
          parameterType="Jabe\Impl\Db\ListQueryParameterObject">
    <bind name="date" value="'REMOVAL_TIME_'"/>
    <bind name="reportPeriodUnitName" value="'MINUTE'"/>
    delete ${limitBeforeWithoutOffset} from ${prefix}ACT_HI_ATTACHMENT
    where REMOVAL_TIME_ &lt;= #{parameter.removalTime}
    <include refid="andWhereMinuteInDateBetweenSql_oracle"/>
    ${limitAfterWithoutOffset}
  </delete>

  <delete id="deleteAttachmentsByRemovalTime_postgres_or_db2"
          parameterType="Jabe\Impl\Db\ListQueryParameterObject">
    <bind name="date" value="'REMOVAL_TIME_'"/>
    <bind name="reportPeriodUnitName" value="'MINUTE'"/>
    delete ${limitBeforeWithoutOffset} from ${prefix}ACT_HI_ATTACHMENT
    where ID_ IN
      (SELECT ID_
       FROM ${prefix}ACT_HI_ATTACHMENT
       WHERE REMOVAL_TIME_ &lt;= #{parameter.removalTime} <include refid="andWhereMinuteInDateBetweenSql"/>
       ${limitAfterWithoutOffset})
  </delete>

  <!-- ATTACHMENT RESULTMAP -->

  <resultMap id="attachmentResultMap" type="Jabe\Impl\Persistence\Entity\AttachmentEntity">
    <id property="id" column="ID_" dbalType="VARCHAR" />
    <result property="revision" column="REV_" dbalType="INTEGER" />
    <result property="name" column="NAME_" dbalType="VARCHAR" />
    <result property="description" column="DESCRIPTION_" dbalType="VARCHAR" />
    <result property="type" column="TYPE_" dbalType="VARCHAR" />
    <result property="taskId" column="TASK_ID_" dbalType="VARCHAR" />
    <result property="rootProcessInstanceId" column="ROOT_PROC_INST_ID_" dbalType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" dbalType="VARCHAR" />
    <result property="url" column="URL_" dbalType="VARCHAR" />
    <result property="contentId" column="CONTENT_ID_" dbalType="VARCHAR" />
    <result property="tenantId" column="TENANT_ID_" dbalType="VARCHAR" />
    <result property="createTime" column="CREATE_TIME_" dbalType="VARCHAR"/>
    <result property="removalTime" column="REMOVAL_TIME_" dbalType="VARCHAR"/>
  </resultMap>
  
  <!-- ATTACHMENT SELECT -->
  <select id="selectAttachment" parameterType="string" resultMap="attachmentResultMap">
    select * from ${prefix}ACT_HI_ATTACHMENT where ID_ = #{id:VARCHAR}
  </select>
  
  <select id="selectAttachmentsByTaskId" parameterType="Jabe\Impl\Db\ListQueryParameterObject" resultMap="attachmentResultMap">
    select * from ${prefix}ACT_HI_ATTACHMENT where TASK_ID_ = #{parameter:VARCHAR}
  </select>
  
  <select id="selectAttachmentsByProcessInstanceId" parameterType="Jabe\Impl\Db\ListQueryParameterObject" resultMap="attachmentResultMap">
    select * from ${prefix}ACT_HI_ATTACHMENT where PROC_INST_ID_ = #{parameter:VARCHAR}
  </select>

  <select id="selectAttachmentByTaskIdAndAttachmentId" parameterType="array" resultMap="attachmentResultMap">
    select * from ${prefix}ACT_HI_ATTACHMENT 
    where TASK_ID_ = #{taskId:VARCHAR}
    and ID_ = #{id:VARCHAR}
  </select>

  <sql id="selectAttachmentsProcessInstanceByIdsSql">
    <if test="!empty(processInstanceIds)">
      and
        <bind name="listOfIds" value="processInstanceIds"/>
        <bind name="fieldName" value="'PROC_INST_ID_'"/>
        <include refid="src/Resources/Impl/Mapping/Entity/Commons.applyInForPaginatedCollection"/>
    </if>
  </sql>

  <sql id="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql">
    <if test="!empty(taskProcessInstanceIds)">
      and TASK_ID_ in (
      select ID_
      from ${prefix}ACT_HI_TASKINST
      where
        <bind name="listOfIds" value="taskProcessInstanceIds"/>
        <bind name="fieldName" value="'PROC_INST_ID_'"/>
        <include refid="src/Resources/Impl/Mapping/Entity/Commons.applyInForPaginatedCollection"/>
      )
    </if>
    <!-- <if test="caseInstanceIds != null and count(caseInstanceIds) &gt; 0">
      and TASK_ID_ in (
      select ID_ from
      ${prefix}ACT_HI_TASKINST
      where
        <bind name="listOfIds" value="caseInstanceIds"/>
        <bind name="fieldName" value="'CASE_INST_ID_'"/>
        <include refid="src/Resources/Impl/Mapping/Entity/Commons.applyInForPaginatedCollection"/>
      )
    </if> -->
  </sql>

  <sql id="selectAttachmentsTaskProcessAndCaseInstanceByIdsSql_mysql">
    <if test="!empty(taskProcessInstanceIds)">
      inner join ${prefix}ACT_HI_TASKINST T
        on TASK_ID_ = T.ID_
        and
          <bind name="listOfIds" value="taskProcessInstanceIds"/>
          <bind name="fieldName" value="'T.PROC_INST_ID_'"/>
          <include refid="src/Resources/Impl/Mapping/Entity/Commons.applyInForPaginatedCollection"/>
    </if>
    <!-- <if test="caseInstanceIds != null and count(caseInstanceIds) &gt; 0">
      inner join ${prefix}ACT_HI_TASKINST T
        on TASK_ID_ = T.ID_
        and
          <bind name="listOfIds" value="caseInstanceIds"/>
          <bind name="fieldName" value="'T.CASE_INST_ID_'"/>
          <include refid="src/Resources/Impl/Mapping/Entity/Commons.applyInForPaginatedCollection"/>
    </if> -->
  </sql>

</mapper>