<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH
    under one or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information regarding copyright
    ownership. Camunda licenses this file to you under the Apache License,
    Version 2.0; you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Jabe\Impl\Persistence\Entity\FilterEntity">

  <!-- FILTER INSERT -->

  <insert id="insertFilter" parameterType="Jabe\Impl\Persistence\Entity\FilterEntity">
    insert into ${prefix}ACT_RU_FILTER (ID_, RESOURCE_TYPE_, NAME_, OWNER_, QUERY_, PROPERTIES_, REV_)
    values (
      #{id ,dbalType=VARCHAR},
      #{resourceType ,dbalType=VARCHAR},
      #{name ,dbalType=VARCHAR},
      #{owner ,dbalType=VARCHAR},
      #{queryInternal ,dbalType=CLOB},
      #{propertiesInternal ,dbalType=CLOB},
      1
    )
  </insert>

  <!-- FILTER UPDATE -->

  <update id="updateFilter" parameterType="Jabe\Impl\Persistence\Entity\FilterEntity">
    update ${prefix}ACT_RU_FILTER
    set
      REV_ = #{revisionNext, dbalType=INTEGER},
      NAME_ = #{name, dbalType=VARCHAR},
      OWNER_ = #{owner, dbalType=VARCHAR},
      QUERY_ = #{queryInternal, dbalType=CLOB},
      PROPERTIES_ = #{propertiesInternal, dbalType=CLOB}
    where ID_ = #{id}
      and REV_ = #{revision, dbalType=INTEGER}
  </update>

  <!-- FILTER DELETE -->

  <delete id="deleteFilter" parameterType="Jabe\Impl\Persistence\Entity\FilterEntity">
    delete from ${prefix}ACT_RU_FILTER
    where ID_ = #{id} and REV_ = #{revision}
  </delete>
  
  <!-- FILTER RESULTMAP -->

  <resultMap id="filterResultMap" type="Jabe\Impl\Persistence\Entity\FilterEntity">
    <id property="id" column="ID_" dbalType="VARCHAR" />
    <result property="revision" column="REV_" dbalType="INTEGER" />
    <result property="resourceType" column="RESOURCE_TYPE_" dbalType="VARCHAR" />
    <result property="name" column="NAME_" dbalType="VARCHAR" />
    <result property="owner" column="OWNER_" dbalType="VARCHAR" />
    <result property="queryInternal" column="QUERY_" dbalType="CLOB" />
    <result property="propertiesInternal" column="PROPERTIES_" dbalType="CLOB" />
  </resultMap>

  <resultMap id="filterResultMap_postgres" type="Jabe\Impl\Persistence\Entity\FilterEntity">
    <id property="id" column="ID_" dbalType="VARCHAR" />
    <result property="revision" column="REV_" dbalType="INTEGER" />
    <result property="resourceType" column="RESOURCE_TYPE_" dbalType="VARCHAR" />
    <result property="name" column="NAME_" dbalType="VARCHAR" />
    <result property="owner" column="OWNER_" dbalType="VARCHAR" />
    <result property="queryInternal" column="QUERY_" dbalType="BINARY" />
    <result property="propertiesInternal" column="PROPERTIES_" dbalType="BINARY" />
  </resultMap>

  <!-- FILTER SELECT -->

  <select id="selectFilter" parameterType="string" resultMap="filterResultMap">
    select * from ${prefix}ACT_RU_FILTER where ID_ = #{id, dbalType=VARCHAR}
  </select>
  
  <select id="selectFilter_postgres" parameterType="string" resultMap="filterResultMap_postgres">
    select * from ${prefix}ACT_RU_FILTER where ID_ = #{id, dbalType=VARCHAR}
  </select>

  <select id="selectFilterByQueryCriteria" parameterType="Jabe\Impl\Filter\FilterQueryImpl" resultMap="filterResultMap">
    <include refid="src/Resources/Impl/Mapping/Entity/Commons.bindOrderBy"/>
    ${limitBefore}
    select ${distinct} RES.*
    ${limitBetween}
    <include refid="selectFilterByQueryCriteriaSql" />
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectFilterByQueryCriteria_postgres" parameterType="Jabe\Impl\Filter\FilterQueryImpl" resultMap="filterResultMap_postgres">
    <include refid="src/Resources/Impl/Mapping/Entity/Commons.bindOrderBy"/>
    ${limitBefore}
    select ${distinct} RES.*
    ${limitBetween}
    <include refid="selectFilterByQueryCriteriaSql" />
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectFilterByQueryCriteria_oracleDb2" parameterType="Jabe\Impl\Filter\FilterQueryImpl" resultMap="filterResultMap">
    <!--
    SEE: https://app.camunda.com/jira/browse/CAM-6014
     -->
    <include refid="src/Resources/Impl/Mapping/Entity/Commons.bindOrderBy"/>
    SELECT RES.*, J.QUERY_, J.PROPERTIES_ FROM (
      ${limitBefore}
      select ${distinct} RES.ID_, RES.REV_, RES.RESOURCE_TYPE_, RES.NAME_, RES.OWNER_
      ${limitBetweenFilter}
      <include refid="selectFilterByQueryCriteriaSql" />
      ${orderBy}
      ${limitAfter}
    ) RES
    INNER JOIN ${prefix}ACT_RU_FILTER J ON RES.ID_ = J.ID_
    <if test="count(orderingProperties) > 0">
      ORDER BY
      <foreach item="orderingProperty" index="index" collection="orderingProperties" separator=",">
        ${@Jabe\Impl\Db\sql.MybatisJoinHelper::orderBy(orderingProperty, index)}
      </foreach>
    </if>
  </select>

   <select id="selectFilterCountByQueryCriteria" parameterType="Jabe\Impl\Filter\FilterQueryImpl" resultType="integer">
    ${countDistinctBeforeStart} RES.ID_ ${countDistinctBeforeEnd}
    <include refid="selectFilterByQueryCriteriaSql" />
    ${countDistinctAfterEnd}
  </select>

  <sql id="selectFilterByQueryCriteriaSql">

    from ${prefix}ACT_RU_FILTER RES
    
    <include refid="Jabe\Impl\Persistence\Entity\AuthorizationEntity.authCheckJoin" /> 
    
    <where>
      <if test="filterId != null">
        RES.ID_ = #{filterId}
      </if>
      <if test="resourceType != null">
        and RES.RESOURCE_TYPE_ = #{resourceType}
      </if>
      <if test="name != null">
        and RES.NAME_ = #{name}
      </if>
      <if test="nameLike != null">
        and RES.NAME_ like #{nameLike} ESCAPE ${escapeChar}
      </if>
      <if test="owner != null">
        and RES.OWNER_ = #{owner}
      </if>

      <include refid="Jabe\Impl\Persistence\Entity\AuthorizationEntity.queryAuthorizationCheck" />

    </where>
  </sql>

</mapper>